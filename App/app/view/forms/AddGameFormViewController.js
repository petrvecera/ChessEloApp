/*
 * File: app/view/forms/AddGameFormViewController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Enif.view.forms.AddGameFormViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.forms.addgameform',

    isInGames: function(timeStamp, store) {
        return store.getData().items.some(item => {return item.get('timestamp') === timeStamp; });

    },

    addNewGame: function() {
        let form = this.getView();
        if (form.isValid()){

            let store = Ext.getStore("GameRawData"),
                values = form.getValues ();


            // Because we are allowing adding games to the history / future we need to correctly select the timestamp for the new record
            // We get only a date and look into the old records and finds the empty timestamp slot

            // Get the actual timestamp
            let selectedDate = Ext.Date.format(new Date(values.timestamp), 'Y,m,d'),
                nwTimestamp = new Date(selectedDate).getTime(); // get the timestamp without time

            // Search the games for new timestamp
            while(this.isInGames(nwTimestamp, store)){
                nwTimestamp++;
            }

            values.timestamp = nwTimestamp;
            //console.log("New TimeStamp is:" + values.timestamp);

            let newRecord = store.add(values);

            form.reset();

            store.sync({
                callback: function (records, operation, success) {
                    Enif.app.getController('storeLoadController').reloadAllStores();
                },
                success: function (batch, options) {
                    Ext.toast('Record sucesfully aded', 3000);
                },
                failure: function (batch, options) {
                    Ext.toast('Error while adding the record', 3000);
                }
            });


        }else{
           Ext.Msg.alert('Error', 'The form is invalid!', Ext.emptyFn);
        }
    }

});